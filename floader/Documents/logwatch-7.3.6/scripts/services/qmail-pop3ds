##########################################################################
# $Id: qmail-pop3ds,v 1.1 2005/09/07 00:37:59 bjorn Exp $
##########################################################################
# $Log: qmail-pop3ds,v $
# Revision 1.1  2005/09/07 00:37:59  bjorn
# New qmail multilog files written by Bob Hutchinson
#
##########################################################################

$Detail         = $ENV{'LOGWATCH_DETAIL_LEVEL'};
$QmailDetail    = $ENV{'qmail_high_detail'};
$QmailThreshold = $ENV{'threshold'};
$ToThreshold    = $ENV{'to_threshold'};
$FromThreshold  = $ENV{'from_threshold'};

while (defined($ThisLine = <STDIN>)) {
	if (
		( $ThisLine =~ /status: / ) or
		( $ThisLine =~ /end (\d+) status \d+/ ) or
		( $ThisLine =~ / LOG5/ ) or
		( $ThisLine =~ /qmail-popup/ )
		)
	{
		# We don't care about these
	}
	elsif ( ($pid1,$RemoteServer) = ( $ThisLine =~ /pid (\d+) from (.*)/ ) )
	{
		$From{$RemoteServer}++;
		$TotalFrom++;
	}
	elsif ( ($pid2,$LocalServer) = ( $ThisLine =~ /ok (\d+) \d+:(.*):995\s+.*/ ) )
	{
		$To{$LocalServer}++;
		$TotalTo++;
	}
	elsif ( ($Warning) = ( $ThisLine =~ /warning: (.*)/i ) )
	{
		$Warnings{$Warning}++;
	}
	else
	{
		# Report any unmatched entries...
		push @OtherList,$ThisLine;
	}
}

if ($QmailDetail >= 1)
{
	if ($QmailThreshold > 0)
	{
		if (($FromThreshold < 0) or ($FromThreshold eq ''))
		{
			$FromThreshold = $QmailThreshold;
	}
		if (($ToThreshold < 0) or ($ToThreshold eq ''))
		{
			$ToThreshold = $QmailThreshold;
		}
	}

	if (($FromThreshold < 0) or ($FromThreshold eq ''))
	{
		$FromThreshold = 0;
	}
	if (($ToThreshold < 0) or ($ToThreshold eq ''))
	{
		$ToThreshold = 0;
	}

	if ( (keys %From) )
	{
		print "\nConnections from (Threshold of " . $FromThreshold . "):\n";
		$threshold_reached=0;
		foreach $Line (sort {$From{$b} <=> $From{$a}} keys %From)
		{
			if ($From{$Line} >= $FromThreshold)
			{
				$threshold_reached=1;
				print "\t" . $Line . " - ". $From{$Line} . " Time(s)\n";
			}
		}
		if ($threshold_reached < 1)
		{
			print "\t" . "None found above the threshold\n";
		}
	}

	if ( (keys %To) )
	{
		print "\nConnections to (Threshold of " . $ToThreshold . "):\n";
		$threshold_reached=0;
		foreach $Line (sort {$To{$b} <=> $To{$a}} keys %To)
		{
			if ($To{$Line} >= $ToThreshold)
			{
				$threshold_reached=1;
				print "\t" . $Line . " - ". $To{$Line} . " Time(s)\n";
			}
		}
		if ($threshold_reached < 1)
		{
			print "\t" . "None found above the threshold\n";
		}
	}
}

if ($TotalFrom or $TotalTo) {
	print "\nTotals:\n";
	print "\tRemote connections $TotalFrom\n";
	print "\tLocal connections $TotalTo\n";
}

if ( (keys %Warnings) ) {
   print "\nWarnings:\n";
   foreach $Line (sort {$Warnings{$b} <=> $Warnings{$a}} keys %Warnings) {
      print "\t" . $Line . " - ". $Warnings{$Line} . " Time(s)\n";
   }
}

if (($#OtherList >= 0) and (not $IngoreUnmatched)){
	print "\n**Unmatched Entries**\n";
	print @OtherList;
}

exit(0);

