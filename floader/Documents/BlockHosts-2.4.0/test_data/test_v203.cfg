# test_injection.cfg - ALL_REGEXS here don't handle log injection, used
# for testing
# This was the config file used for blockhosts 2.0.3 and previous,
# before June 2007. After a year, ok to remove this test file from 
# regression testing - this file is not included in MANIFEST anyway
#-----------------------------------------------------------------------
# comments must begin in column 1, like this line.
# /etc/blockhosts.cfg : make it writeable when you need to update
# this file, otherwise should be set to readonly for everyone,
# for security. Note that new installs/upgrades may also overwrite this
# file, save a copy if this is modified locally
  
# ----------------------------------------------------------------------
# BE CAREFUL UNCOMMENTING - if done incorrectly, scripts will not start up.
# The best way to uncomment is to just remove or add the single character #
# from the appropriate lines, and if needed, edit the line
# ----------------------------------------------------------------------
 
# Starting with BlockHosts 2.0.2, this config file is now required to
# read in the regular expressions to search for access failures in the
# log files, and this is also the preferred way to provide arguments
# to blockhosts.
# To make changes, copy the assignment line you need to change, change
# the value and remove the # character from column 1 to uncomment it
# Follow python string/list/dict constant expression syntax, as shown in the
# exmple lines. All strings should be enclosed with python-style quotes.
 
# python experts: script uses eval() to parse all the values specified here.

#-----------------------------------------------------------------------
[common]
# common section is variables that may be used by main program, mail, etc

#HOSTS_BLOCKFILE = "/etc/hosts.allow"
# the name of the block-file on your computer - usually hosts.allow or
# hosts.deny, see "man 5 hosts_access" for details on these files.
# default is hosts.allow

#HOST_BLOCKLINE = ["ALL: ", " : deny"]
# the line to output, with Host Ip Address in between the strings above,
# to turn on blocking of that IP address

#VERBOSE = Log.MESSAGE_LEVEL_ERROR   #-> error    (same as --quiet option)
VERBOSE = Log.MESSAGE_LEVEL_WARNING #-> warning  (default)
#VERBOSE = Log.MESSAGE_LEVEL_INFO    #-> info     (same as --verbose option)
#VERBOSE = Log.MESSAGE_LEVEL_DEBUG   #-> debug    (same as --debug option)
# logging message levels - each level includes all levels above it

#-----------------------------------------------------------------------
[blockhosts]
# blockhosts section is used for updating the blocked hosts list

#LOGFILES = [ "/var/log/secure", ]
#LOGFILES = [ "/var/log/auth.log", ]
#LOGFILES = [ "/var/log/secure", "/var/log/vsftpd.log", ]
# default list of logs to process, comma separated, can follow Python
# syntax, should be a sequence (list or tuple) of strings representing
# filenames: 1 or more files, default is single file: /var/log/secure

#COUNT_THRESHOLD = 7
# number of invalid attempts after which host is blocked
# note that actual denial make take one or more attempts - depends on the
# timing of when LOGFILES are updated by the system, and when this script
# gets to run

#AGE_THRESHOLD = 12
# number of hours after which host entry is discarded from hosts.deny
# 24 -> one day, 168 -> one week, 720 -> 30 days, integer values only
# most attackers go away after they are blocked, so to keep hosts.deny
# file size small, no reason to make this any more than, say, half-a-day

#LOCKFILE = "/tmp/blockhosts.lock"
# need create/write access to this file, used to make sure only one
# instance of blockhosts.py script writes the HOSTS_BLOCKFILE at one time
# note that the mail/iptables/iproute parts of the program do not serialize

#---------------
# ALL_REGEXS_STR:
# Modify this if you need to match some other lines in your system logfiles,
# other than for OpenSSH sshd, proftpd, vsftpd, etc, which are built-in.
# The regexps should contain a P<host> to make a named match for the IP
# address, no other P<> is required.
# Use this if you need to match additional lines or services to block
# IP addresses based on lines in the system logs.
# The value for this is a python dictionary, key is a string to label the
# regular expression, choose any unique string, and value is the regular
# expression string.
 
# In the defaults below, the given key values match the following examples:
 
# SSHD:
# Jul 19 06:47:27 hostname sshd[1768]: Invalid user xxx from 10.10.58.3
# Nov 15 04:57:19 hostname sshd[1668]: Illegal user yyy from ::ffff:10.6.184.165
# Oct  4 12:04:50 hostname sshd[1110]: [ID 800047 auth.info] Illegal user slime from 192.168.102.101
# Jul 19 06:58:23 hostname sshd[2821]: User root from 10.10.58.3 not allowed because none of user's groups are listed in AllowGroups
#Apr 20 12:34:30 hostname sshd[9701]: Failed password for invalid user root from 10.21.45.30 port 35993 ssh2

# ProFTPD:
# May 29 22:38:10 hostname proftpd[28865]: hostname (10.0.0.1[10.0.0.1]) - USER validuser (Login failed): Incorrect password.
# May 29 22:40:20 hostname proftpd[28879]: hostname (10.0.0.1[10.0.0.1]) - USER aaa: no such user found from 10.0.0.1 [10.0.0.1] to 10.0.0.1:21
# May 30 07:31:55 hostname proftpd[1450]: hostname (10.0.0.1[10.0.0.1]) - SECURITY VIOLATION: root login attempted.
 
# VSFTPD: 
# Fri Jan 21 15:56:57 2005 [pid 6726] [test] FAIL LOGIN: Client "10.204.30.15"

# Pure-FTPd
# May 17 16:13:29 hostname pure-ftpd: (?@10.10.199.69) [WARNING] Authentication failed for user [username]

# Solaris 10 ftpd  -----------------------
# Mar 23 16:52:51 hostname ftpd[1322]: [ID 122736 daemon.info] failed login from 192.168.102.34 [192.168.102.34], [unknown]
# Apr 16 17:01:19 hostname.provider.net ftpd[18088]: [ID 122736 daemon.info] failed login from aa2003050453007.ccc.ddd.eeee.us [10.5.66.10], [unknown]
 
# ipop3d POP3 -----------------------
# ipop3d Aug 18 16:27:38 hostname ipop3d[2540]: Login failed user=username auth=username host=badhostname [10.3.32.17]

# Dovecot POP3 -----------------------
# Feb 19 15:40:23 servername pop3-login: Aborted login [::ffff:10.238.200.11]

# Qpopper POP3 -----------------------
# Mar 24 11:49:56 hostname qpopper[16765]: abraham at adsl-10-49-203-118.dsl.sbcglobal.net (10.49.203.118): -ERR [AUTH] Password supplied for "abraham" is incorrect.

#---

# BE CAREFUL UNCOMMENTING - if done incorrectly, blockhosts.py will not
# start up.
# The best way to uncomment is to just remove the single character #
# from the appropriate lines, and then edit the line as needed, or add
# a single # character at column 1 in each line, to comment out some
# pattern
# - make sure each uncommented rule is in a single line (no line breaks)
# - if you add a rule, add a id for the rule - any string, like
#   "ProFTPD-NoUser" as key, and then the r"""string""" as value.
#   This is a "dict" data structure from python.
# - each rule should use (?P<host>) to identify the IP4 IP-address of
#   host to watch for blocking
# - each rule line should be indented identically - four spaces, then the
#   rule

# note: these are from blockhosts.py 2.0.3 - so will fail the tests, will
# miss some VSFTPD matches, and will fail on log injection attack matches
ALL_REGEXS_STR = {

    "SSHD-Invalid": r"""sshd\[(?P<pid>\d+)\]:.*?(Invalid|Illegal) user .* from (::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})""",

    "SSHD-NotAllowed": r"""sshd\[(?P<pid>\d+)\]: User .* from (::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) not allowed""",

    "SSHD-Fail": r"""sshd\[(?P<pid>\d+)\]: Failed (?P<method>.*?) for (?P<invalid>invalid user |illegal user )?.* from (::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})""",

    "ProFTPD-NoPassword": r"""proftpd\[(?P<pid>\d+)\][^[]+\[(::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).+Login failed""",

    "ProFTPD-NoUser": r"""proftpd\[(?P<pid>\d+)\][^[]+\[(::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).+no such user""",

    "ProFTPD-SecurityViolation": r"""proftpd\[(?P<pid>\d+)\][^[]+\[(::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).+SECURITY VIOLATION""",

    "VSFTPD-Fail": r"""\[pid \d+\] \[.*?\] FAIL LOGIN: Client "(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})""",

    "PureFTPD-Fail": r"""pure-ftpd: \(\?\@(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\) \[WARNING\] Authentication failed""",

    "Solaris-ftpd": r"""ftpd\[\d+\].*? failed login from .* \[(::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\],""",

    "POP-Fail": r"""ipop3d\[(?P<pid>\d+)\]: Login failed.* \[(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\]""",

    "Dovecot-Fail": r"""pop3-login: Aborted login \[(::ffff:)?(?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\]""",

    "Qpopper-Fail": r"""qpopper\[\d+\]: .* \((?P<host>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\): -ERR \[AUTH\] Password supplied """,

    }


#-----------------------------------------------------------------------
[mail]
# e-mail configuration

#MAIL = False
# Whether to enable e-mail sending. If set to True, will send email at
# end of the block-hosts run, see --help for related check_ip option 

MAIL_LOG_MESSAGES = True
#MAIL_LOG_MESSAGES = False
# Whether to include the log messages in the email body

#NOTIFY_ADDRESS = 'root@localhost.localdomain'
# Email address to send the messages to.

# All of the following are SMTP required variables, SMTP is used to send
# email; this is necessary only if using the mail functionality
#SMTP_SERVER = "localhost"
#SENDER_ADDRESS = 'BlockHosts <blockhosts-do-not-reply@localhost.localdomain>'
#SMTP_USER = ''
#SMTP_PASSWD = ''
# If smtp_user and passwd is empty, no authentication is necessary

#-----------------------------------------------------------------------
[ipblock]
# ipblock section for enabling protection using TCP/IP level blocking -
# by using null routes, or iptables filtering, all network communication
# is stopped from a particular IP address

#IPBLOCK = ""
#IPBLOCK = "iproute"
#IPBLOCK = "iptables"
# "iproute": Do TCP/IP blocking using route commands to setup null-routes. 
#    ip route add <ip-addr> via 127.0.0.1
# "iptable": Do TCP/IP blocking, using iptables packet filtering.
#    iptables --append blockhosts --source <ip-addr> -j DROP

#-----------------------------------------------------------------------
